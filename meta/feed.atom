<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://46b.it/meta/feed.atom" rel="self" type="application/atom+xml" /><link href="https://46b.it/" rel="alternate" type="text/html" /><updated>2021-09-13T00:54:49+00:00</updated><id>https://46b.it/meta/feed.atom</id><title type="html">46b.it</title><entry><title type="html">I built a real-time strategy game in the browser</title><link href="https://46b.it/2021/built-an-rts-in-the-browser/" rel="alternate" type="text/html" title="I built a real-time strategy game in the browser" /><published>2021-09-09T00:00:00+00:00</published><updated>2021-09-09T00:00:00+00:00</updated><id>https://46b.it/2021/built-an-rts-in-the-browser</id><content type="html" xml:base="https://46b.it/2021/built-an-rts-in-the-browser/">&lt;p&gt;As a child I loved real-time strategy (RTS) games. A large and fairly open world, several players, competition for resources, and a goal of producing armies to conquer my opponents. Something about the mix of freedom and strategy was an absolute joy to me.&lt;/p&gt;

&lt;p&gt;Games like Rise of Nations and Supreme Commander showed me how powerful computers could be. Some of my first serious programming was building community projects like gametags or modding tools.&lt;/p&gt;

&lt;p&gt;I always wanted to build my own RTS game from scratch. Master all the different things needed: game design, engine design, graphics design, efficient pathfinding. It’s taken a long time to get there, partly because I don’t like C++.&lt;/p&gt;

&lt;p&gt;Due to the pandemic, I had enough time last year to realise this old dream. Now that I’ve been making my blog more active it’s time to share it properly.&lt;/p&gt;

&lt;h2 id=&quot;the-game&quot;&gt;The game&lt;/h2&gt;

&lt;p&gt;My game is called &lt;a href=&quot;https://rtt.46b.it&quot;&gt;RTT&lt;/a&gt;. Here’s a preview:&lt;/p&gt;

&lt;iframe src=&quot;https://rtt.46b.it/demo.html&quot; style=&quot;width: 100%; aspect-ratio: 1/1; border: none; pointer-events: none; display: inline-block;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://rtt.46b.it&quot;&gt;RTT&lt;/a&gt; contains all the key elements of an RTS game: resource collection, unit production, AIs, obstacles, realistic pathfinding. And it runs completely in the browser! The engine is written in TypeScript. Pathfinding is done with a mix of my own routines and the &lt;a href=&quot;https://github.com/mikewesthad/navmesh&quot;&gt;navmesh&lt;/a&gt; npm library. It’s rendered using ThreeJS, WebGL and GLSL.&lt;/p&gt;

&lt;p&gt;There are several different types of units. Small engineers that can go build structures or collide with enemies. Larger tanks that spray out projectiles. Artillery that sends slow, powerful projectiles. And laser tanks that do exactly what it sounds like.&lt;/p&gt;

&lt;p&gt;Getting it performant in multiple browsers has been hell. For a long time I was close to giving up. Even once I’d dealt with the worst-profiling code, and done things like caching paths, performance inside browsers varies a lot. My 6-year-old MacBook Pro with integrated graphics runs well now, and that’s something I’m very proud of.&lt;/p&gt;

&lt;p&gt;There’s no proper UI right now, so all the players are AIs. There’s some difficult problems taking it further, that I’ll take about another day. But you can click-drag to select units and right-click to move them. &lt;a href=&quot;https://rtt.46b.it&quot;&gt;Go have a play!&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">As a child I loved real-time strategy (RTS) games. A large and fairly open world, several players, competition for resources, and a goal of producing armies to conquer my opponents. Something about the mix of freedom and strategy was an absolute joy to me. Games like Rise of Nations and Supreme Commander showed me how powerful computers could be. Some of my first serious programming was building community projects like gametags or modding tools. I always wanted to build my own RTS game from scratch. Master all the different things needed: game design, engine design, graphics design, efficient pathfinding. It’s taken a long time to get there, partly because I don’t like C++. Due to the pandemic, I had enough time last year to realise this old dream. Now that I’ve been making my blog more active it’s time to share it properly. The game My game is called RTT. Here’s a preview: RTT contains all the key elements of an RTS game: resource collection, unit production, AIs, obstacles, realistic pathfinding. And it runs completely in the browser! The engine is written in TypeScript. Pathfinding is done with a mix of my own routines and the navmesh npm library. It’s rendered using ThreeJS, WebGL and GLSL. There are several different types of units. Small engineers that can go build structures or collide with enemies. Larger tanks that spray out projectiles. Artillery that sends slow, powerful projectiles. And laser tanks that do exactly what it sounds like. Getting it performant in multiple browsers has been hell. For a long time I was close to giving up. Even once I’d dealt with the worst-profiling code, and done things like caching paths, performance inside browsers varies a lot. My 6-year-old MacBook Pro with integrated graphics runs well now, and that’s something I’m very proud of. There’s no proper UI right now, so all the players are AIs. There’s some difficult problems taking it further, that I’ll take about another day. But you can click-drag to select units and right-click to move them. Go have a play!</summary></entry><entry><title type="html">Securing Raspberry Pi access using free CloudFlare</title><link href="https://46b.it/2021/securing-pi-access-using-cloudflare/" rel="alternate" type="text/html" title="Securing Raspberry Pi access using free CloudFlare" /><published>2021-09-08T00:00:00+00:00</published><updated>2021-09-08T00:00:00+00:00</updated><id>https://46b.it/2021/securing-pi-access-using-cloudflare</id><content type="html" xml:base="https://46b.it/2021/securing-pi-access-using-cloudflare/">&lt;p&gt;I’ve recently been building an environment monitoring station at home using a Raspberry Pi 4B+. It turns out to be a remarkably powerful computer, much more than I remembered from earlier versions. I’ll write more another time about the environment side of things, but today I’m going to focus on how awesome the UX is when putting it behind Cloudflare.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;This is the first time I’ve used &lt;a href=&quot;https://www.cloudflare.com/&quot;&gt;Cloudflare&lt;/a&gt; for more than DNS, and it’s remarkable how much you can do for free. When I SSH to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pi.46bit.cloud&lt;/code&gt;, I get redirected to a browser page to sign in – either with a one-time password emailed to me, or via Google OAuth. Only once that’s done can I actually finish SSHing. Cloudflare hides my actual home IP address and adds a strong boundary around accessing services externally.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writing/cloudflare-access-otp.jpg&quot; alt=&quot;The login page that Cloudflare Teams provides&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-set-it-up&quot;&gt;How to set it up&lt;/h2&gt;

&lt;p&gt;You have to be hosting your DNS with Cloudflare for this to work. Once that’s done there are two parts to this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Connecting your host to Cloudflare:&lt;/strong&gt; &lt;a href=&quot;https://www.cloudflare.com/products/tunnel/&quot;&gt;Argo Tunnel&lt;/a&gt; connection outbound from my Pi to Cloudflare. This acts as a reverse proxy. Cloudflare forwards authenticated traffic to the Pi through this&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Setup inside Cloudflare:&lt;/strong&gt; A DNS entry pointing to a hostname identifying that tunnel, and then a &lt;a href=&quot;https://www.cloudflare.com/teams/access/&quot;&gt;Cloudflare Access&lt;/a&gt; app telling Cloudflare what authentication to require.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Setting up Argo Tunnel involves manual sysadmin on your Pi. Cloudflare provide &lt;a href=&quot;https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide&quot;&gt;good instructions on setting up the tunnel&lt;/a&gt;. You have to do this before proceeding further.&lt;/p&gt;

&lt;p&gt;Once you’ve set up Argo Tunnel, Cloudflare Access can be setup in Cloudflare’s web interface. It’s exposed in their interface in a few different places and easier to configure in code using Terraform. Here’s how to do it with the &lt;a href=&quot;https://registry.terraform.io/providers/cloudflare/cloudflare/latest/docs&quot;&gt;Cloudflare Terraform Provider&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-terraform highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;variable&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cloudflare_account_id&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Provide your Cloudflare account ID (a 20-ish character string)&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Change `46bit.cloud` to the name of your domain (DNS must be hosted in free Cloudflare)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cloudflare_zone&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_46bit_cloud&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;zone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;46bit.cloud&quot;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;plan&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;free&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cloudflare_record&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pi&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;zone_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cloudflare_zone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_46bit_cloud&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CNAME&quot;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;proxied&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Change `pi` to the subdomain you want to use&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pi&quot;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Change this to reflect the ID of your Argo Tunnel&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;GUID-GOES-HERE.cfargotunnel.com&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cloudflare_access_application&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pi&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pi&quot;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;account_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cloudflare_account_id&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Change this to the subdomain you want to use&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pi.46bit.cloud&quot;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Change this to `self_hosted` if this is a webapp rather than SSH&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;             &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ssh&quot;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;session_duration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;24h&quot;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;allowed_idps&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cloudflare_access_identity_provider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email_an_otp_to_login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;auto_redirect_to_identity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cloudflare_access_policy&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pi_email&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Pi SSH access via email&quot;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;account_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cloudflare_account_id&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;application_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cloudflare_access_application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;precedence&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;decision&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;allow&quot;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Change this to your email address domain&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;email_domain&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;46b.it&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;46bit.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cloudflare_access_identity_provider&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;email_an_otp_to_login&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;account_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cloudflare_account_id&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Email a One Time Password to login&quot;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;onetimepin&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now visiting the domain will require you to be able to access an email account on that domain before you can proceed. For automatic access you can use &lt;a href=&quot;https://registry.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/access_service_token&quot;&gt;Service Tokens&lt;/a&gt; (sadly mTLS isn’t supported in the free plan.)&lt;/p&gt;</content><author><name></name></author><summary type="html">I’ve recently been building an environment monitoring station at home using a Raspberry Pi 4B+. It turns out to be a remarkably powerful computer, much more than I remembered from earlier versions. I’ll write more another time about the environment side of things, but today I’m going to focus on how awesome the UX is when putting it behind Cloudflare.</summary></entry><entry><title type="html">Choosing a technical focus as a software engineer</title><link href="https://46b.it/2021/choosing-to-focus-as-a-software-engineer/" rel="alternate" type="text/html" title="Choosing a technical focus as a software engineer" /><published>2021-09-02T00:00:00+00:00</published><updated>2021-09-02T00:00:00+00:00</updated><id>https://46b.it/2021/choosing-to-focus-as-a-software-engineer</id><content type="html" xml:base="https://46b.it/2021/choosing-to-focus-as-a-software-engineer/">&lt;p&gt;Young technologists have a wonderful opportunity to explore. Software is involved in almost every company; &lt;a href=&quot;https://a16z.com/2011/08/20/why-software-is-eating-the-world/&quot;&gt;software ate the world&lt;/a&gt;. Whether you’re a software engineer, data scientist or product manager you can work on more-or-less anything.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;I love learning. Years ago I wanted to work on everything, learn all I could. For quite a while that was my main career goal. I’ve worked on a huge list of things [1], from Signal Processing to DevOps, Archaeology to Web Development. I’ve worked in startups, academia, government, and enterprise.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;There are huge upsides. I have relevant experience for almost all technical job postings. That feels awesome. I can navigate away from difficult problems a long time before they happen. “Your opinions save lives,” to quote some feedback.&lt;/p&gt;

&lt;p&gt;The downside is time. It’s harder to count years of experience when you were doing radically different things from year to year. If I’d focused on Web Development work I might have made more formal career progress… or I might have bored out.&lt;/p&gt;

&lt;p&gt;As usual this issue is not clear-cut. It’s good to have a mix of specialism and general competence, called &lt;a href=&quot;https://alexkondov.com/the-t-shaped-engineer/&quot;&gt;the T-shaped engineer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My scattergun approach to learning showed me enough different workplaces to learn that human factors deserved most of my attention. Politics or our own issues dictate a lot of “technical” outcomes.&lt;/p&gt;

&lt;p&gt;These days I’ve settled down in the DevOps/Cloud space. My past experience helps – particularly Cybersecurity – but I don’t expect to move into a different technical area soon. I’m more likely to move into management, as these days my learning is mostly about People issues and not Technical ones.&lt;/p&gt;

&lt;p&gt;[1] Games, Frontend Web, Backend Web, Data Analysis, 3D Model Generation, Archaeological data, Cybersecurity, Signal Processing/Machine Learning, and DevOps&lt;/p&gt;</content><author><name></name></author><summary type="html">Young technologists have a wonderful opportunity to explore. Software is involved in almost every company; software ate the world. Whether you’re a software engineer, data scientist or product manager you can work on more-or-less anything.</summary></entry><entry><title type="html">Finding a new job in tech</title><link href="https://46b.it/2021/finding-a-new-job-in-tech/" rel="alternate" type="text/html" title="Finding a new job in tech" /><published>2021-03-12T00:00:00+00:00</published><updated>2021-03-12T00:00:00+00:00</updated><id>https://46b.it/2021/finding-a-new-job-in-tech</id><content type="html" xml:base="https://46b.it/2021/finding-a-new-job-in-tech/">&lt;p&gt;Inspired by &lt;a href=&quot;https://www.toby.codes/posts/2021-02-Getting-a-job-in-tech-in-2021&quot;&gt;Toby Lorne&lt;/a&gt;, I wanted to share about my recent job hunt.&lt;/p&gt;

&lt;p&gt;For the last four years I have been an engineer at &lt;a href=&quot;https://gds.blog.gov.uk/about/&quot;&gt;Government Digital Service&lt;/a&gt; in London. My background is quite varied. At GDS I quickly became a DevOps expert and built, taught and operated infrastructure for &lt;a href=&quot;https://www.cloud.service.gov.uk&quot;&gt;cloud platforms&lt;/a&gt;, &lt;a href=&quot;https://www.payments.service.gov.uk&quot;&gt;payment processing&lt;/a&gt; and &lt;a href=&quot;https://www.verify.service.gov.uk&quot;&gt;digital identity&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;4 years is a long time to stay in one technology job, even with many different teams and projects. I have contributed to just about every service in GDS, and many elsewhere in government. I decided to find a new challenge elsewhere as my growth had slown down. I want to stay on the technical career track for the time being.&lt;/p&gt;

&lt;p&gt;I have moved back to York as I wasn’t enjoying London during the pandemic. Quality of life here is excellent and I’m planning to stay. Remote roles are freely available.&lt;/p&gt;

&lt;h2 id=&quot;applications&quot;&gt;Applications&lt;/h2&gt;

&lt;p&gt;I applied for senior-level DevOps, SRE and software engineering, roles at these types of organisations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Government: 1&lt;/li&gt;
  &lt;li&gt;Cloud consulting: 1&lt;/li&gt;
  &lt;li&gt;Mid- to late-stage startups: 4&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I got lots of interest from other teams in the Civil Service. I already know I can succeed there, and they already know what I’m capable of. But after 4 years I think it’s important to see somewhere else and keep learning. I ruled out large enterprises for the same reasons. I also ruled out finance for the time being to focus on quality-of-life.&lt;/p&gt;

&lt;p&gt;I applied to several startups with problems that interest me. I have past experience with a small Y Combinator startup, and helping grow some larger startups. I’m sure I’ll go back into the startup world sooner or later.&lt;/p&gt;

&lt;p&gt;I also interviewed with a cloud consultancy that I’ve known for quite a long time. I haven’t done consultancy before, although I’ve done a lot of freelancing and think consulting might suit me well.&lt;/p&gt;

&lt;p&gt;All the roles I applied for were mostly- or fully-remote. This ruled out a few very competitive companies but not anywhere I was desperate to work at yet.&lt;/p&gt;

&lt;h2 id=&quot;progress&quot;&gt;Progress&lt;/h2&gt;

&lt;p&gt;Here’s a brief summary of how I progressed in the interviews:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Stage&lt;/th&gt;
      &lt;th&gt;Passed&lt;/th&gt;
      &lt;th&gt;Rejected&lt;/th&gt;
      &lt;th&gt;Withdrew&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Application&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CV Sift&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Phone screen&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tech interviews&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Offer&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I got responses from every application and ended up with two offers. I withdrew one application when I decided not to stay in government, and a second that was too far behind when I got offers.&lt;/p&gt;

&lt;h2 id=&quot;outcome&quot;&gt;Outcome&lt;/h2&gt;

&lt;p&gt;I had two offers to choose between: one from a late-stage startup and one from the cloud consulting company. Both were quite appealing and I was confident I’d grow from both.&lt;/p&gt;

&lt;p&gt;I chose based on my favourite work. On &lt;a href=&quot;https://www.cloud.service.gov.uk&quot;&gt;GOV.UK PaaS&lt;/a&gt; I have found myself helping services across government by solving incidents or advising on architecture. Consulting is a great way to get similar exposure in the private sector.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thus I’m excited to be joining &lt;a href=&quot;https://www.engineerbetter.com&quot;&gt;EngineerBetter&lt;/a&gt; in early April to do cloud consulting and help transform companies.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;retrospective&quot;&gt;Retrospective&lt;/h2&gt;

&lt;p&gt;I have a bunch of education and skills, but it felt terrible having a really good time during a pandemic that has hurt so many people.&lt;/p&gt;

&lt;p&gt;Every company respected that I use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;they/them&lt;/code&gt; pronouns. I was very happy about this. Companies seem to be well into adjusting to the existence of non-binary staff.&lt;/p&gt;

&lt;p&gt;It’s getting harder to find pure-technical roles that I think will challenge me. I’m not sure what to do after Senior, but sooner or later I’m going to be writing a lot less code and doing a lot more negotiation and planning.&lt;/p&gt;

&lt;p&gt;Asking difficult &lt;a href=&quot;https://leetcode.com/&quot;&gt;LeetCode&lt;/a&gt;-style Computer Science puzzles seems quite rare outside of finance, enterprise and Silicon Valley startups. These problems test abstract thought, but they also exclude people without a Computer Science education. I didn’t encounter any problems that I couldn’t solve.&lt;/p&gt;

&lt;p&gt;Finding fully- or mostly-remote jobs was very easy. I’m no longer in London and don’t want to travel there every day. This was not a problem for any organisation I talked to. There’s some selection bias here in terms of the company culture that appeals to me. Remote salaries were quite similar to what I’d have targeted in London.&lt;/p&gt;

&lt;p&gt;Having deep experience of both development and operations is extremely valuable right now. I wasn’t very surprised to receive multiple offers. I think I got bonus points for having taught infrastructure a lot in my current role.&lt;/p&gt;

&lt;p&gt;Interviewing at Senior level feels easier than early-career. Expectations are higher but I have a lot of confidence and many deep experiences to draw on. I also have a bigger network for referrals and to ask questions. I imagine Staff level would still be hard.&lt;/p&gt;

&lt;p&gt;Companies do a lot of interview stages. I had 20+ videocalls over two weeks. Scheduling these was very draining despite even though most companies have worldwide interviewers available at any convenient time. In hindsight I wished to have taken time off to find a new job.&lt;/p&gt;

&lt;p&gt;Private sector salaries are much higher than government, yet Civil Service pensions are very valuable. Focusing on pensions doesn’t work for London’s housing market and that pushes a lot of people away.&lt;/p&gt;</content><author><name></name></author><summary type="html">Inspired by Toby Lorne, I wanted to share about my recent job hunt. For the last four years I have been an engineer at Government Digital Service in London. My background is quite varied. At GDS I quickly became a DevOps expert and built, taught and operated infrastructure for cloud platforms, payment processing and digital identity. 4 years is a long time to stay in one technology job, even with many different teams and projects. I have contributed to just about every service in GDS, and many elsewhere in government. I decided to find a new challenge elsewhere as my growth had slown down. I want to stay on the technical career track for the time being. I have moved back to York as I wasn’t enjoying London during the pandemic. Quality of life here is excellent and I’m planning to stay. Remote roles are freely available. Applications I applied for senior-level DevOps, SRE and software engineering, roles at these types of organisations: Government: 1 Cloud consulting: 1 Mid- to late-stage startups: 4 I got lots of interest from other teams in the Civil Service. I already know I can succeed there, and they already know what I’m capable of. But after 4 years I think it’s important to see somewhere else and keep learning. I ruled out large enterprises for the same reasons. I also ruled out finance for the time being to focus on quality-of-life. I applied to several startups with problems that interest me. I have past experience with a small Y Combinator startup, and helping grow some larger startups. I’m sure I’ll go back into the startup world sooner or later. I also interviewed with a cloud consultancy that I’ve known for quite a long time. I haven’t done consultancy before, although I’ve done a lot of freelancing and think consulting might suit me well. All the roles I applied for were mostly- or fully-remote. This ruled out a few very competitive companies but not anywhere I was desperate to work at yet. Progress Here’s a brief summary of how I progressed in the interviews: Stage Passed Rejected Withdrew Application 6 -   CV Sift 5 1   Phone screen 4   1 Tech interviews 3   1 Offer 2 1   I got responses from every application and ended up with two offers. I withdrew one application when I decided not to stay in government, and a second that was too far behind when I got offers. Outcome I had two offers to choose between: one from a late-stage startup and one from the cloud consulting company. Both were quite appealing and I was confident I’d grow from both. I chose based on my favourite work. On GOV.UK PaaS I have found myself helping services across government by solving incidents or advising on architecture. Consulting is a great way to get similar exposure in the private sector. Thus I’m excited to be joining EngineerBetter in early April to do cloud consulting and help transform companies. Retrospective I have a bunch of education and skills, but it felt terrible having a really good time during a pandemic that has hurt so many people. Every company respected that I use they/them pronouns. I was very happy about this. Companies seem to be well into adjusting to the existence of non-binary staff. It’s getting harder to find pure-technical roles that I think will challenge me. I’m not sure what to do after Senior, but sooner or later I’m going to be writing a lot less code and doing a lot more negotiation and planning. Asking difficult LeetCode-style Computer Science puzzles seems quite rare outside of finance, enterprise and Silicon Valley startups. These problems test abstract thought, but they also exclude people without a Computer Science education. I didn’t encounter any problems that I couldn’t solve. Finding fully- or mostly-remote jobs was very easy. I’m no longer in London and don’t want to travel there every day. This was not a problem for any organisation I talked to. There’s some selection bias here in terms of the company culture that appeals to me. Remote salaries were quite similar to what I’d have targeted in London. Having deep experience of both development and operations is extremely valuable right now. I wasn’t very surprised to receive multiple offers. I think I got bonus points for having taught infrastructure a lot in my current role. Interviewing at Senior level feels easier than early-career. Expectations are higher but I have a lot of confidence and many deep experiences to draw on. I also have a bigger network for referrals and to ask questions. I imagine Staff level would still be hard. Companies do a lot of interview stages. I had 20+ videocalls over two weeks. Scheduling these was very draining despite even though most companies have worldwide interviewers available at any convenient time. In hindsight I wished to have taken time off to find a new job. Private sector salaries are much higher than government, yet Civil Service pensions are very valuable. Focusing on pensions doesn’t work for London’s housing market and that pushes a lot of people away.</summary></entry><entry><title type="html">Getting alerted when cycle paths flood: part two</title><link href="https://46b.it/2021/getting-alerted-when-cycle-paths-flood-part-two/" rel="alternate" type="text/html" title="Getting alerted when cycle paths flood: part two" /><published>2021-03-05T00:00:00+00:00</published><updated>2021-03-05T00:00:00+00:00</updated><id>https://46b.it/2021/getting-alerted-when-cycle-paths-flood-part-two</id><content type="html" xml:base="https://46b.it/2021/getting-alerted-when-cycle-paths-flood-part-two/">&lt;p&gt;I recently moved back to York, a city I absolutely love. One of the best things about living here is cycling. But York has two rivers, one of which brings rain from hills a long way away. Some of the best cycle routes can flood after rainfall when the rivers rise.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;This post is aimed is at software engineers with DevOps skills who already run Prometheus and Grafana. If you don’t have those skills then I’d be interested in figuring out how to make this more widely available–contact me.&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;&lt;a href=&quot;/2021/getting-alerted-when-cycle-paths-flood/&quot;&gt;the first post&lt;/a&gt;&lt;/strong&gt; I explained how to get River Water Level data exposed in a way that Prometheus can scrape. In this post we’ll get Prometheus scraping the data, and then look at how we can get alerts and see the data in Grafana.&lt;/p&gt;

&lt;h2 id=&quot;scraping-river-water-levels-into-prometheus&quot;&gt;Scraping river water levels into Prometheus&lt;/h2&gt;

&lt;p&gt;I have deployed the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flood-exporter&lt;/code&gt; we built in &lt;a href=&quot;/2021/getting-alerted-when-cycle-paths-flood/&quot;&gt;my last post&lt;/a&gt;, and it’s running at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flood-exporter.k8s.46b.it&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Scraping this endpoint into Prometheus is simple (since I’m very familiar with Prometheus.) Here’s the YAML config:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scrape_configs:
- job_name: river_level_metrics
  scheme: https
  static_configs:
  - targets:
    - flood-exporter.k8s.46b.it
  metrics_path: /probe
  scrape_interval: 180s
  params:
    target:
      - https://environment.data.gov.uk/flood-monitoring/id/stations/L2406.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://environment.data.gov.uk/flood-monitoring/id/stations/L2406.json&lt;/code&gt; is specific to York. See &lt;a href=&quot;/2021/getting-alerted-when-cycle-paths-flood/&quot;&gt;the previous post&lt;/a&gt; to understand how to get river data for a different place.&lt;/p&gt;

&lt;p&gt;This should “just work” :)&lt;/p&gt;

&lt;p&gt;There are three metrics available:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;river_level_measurement&lt;/code&gt;, storing the current river level in metres&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;river_level_min_on_record&lt;/code&gt;, storing the lowest river level that’s been measured&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;river_level_miaxon_record&lt;/code&gt;, storing the highest river level that’s been measured&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In York the river level is updated every 15 minutes, so the Prometheus config only bothers to scrape every few minutes. I don’t know if it’s different elsewhere.&lt;/p&gt;

&lt;h2 id=&quot;building-a-dashboard-in-grafana&quot;&gt;Building a dashboard in Grafana&lt;/h2&gt;

&lt;p&gt;Now that the data’s in Prometheus, we’re free to use it in a Grafana dashboard.&lt;/p&gt;

&lt;p&gt;Some of the Grafana dashboard is going to be specific to York, but I’ll give you my config and you can tune it to your needs.&lt;/p&gt;

&lt;p&gt;The river levels used for these alerts are from &lt;a href=&quot;http://nosearmy.com/isitflooded/&quot;&gt;nosearmy.com/isitflooded/&lt;/a&gt;. All credit to them.&lt;/p&gt;

&lt;p&gt;Here’s what my dashboard looks like when things are OK:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/writing/york-cycle-path-dashboard-happy.png&quot;&gt;&lt;img src=&quot;/assets/writing/york-cycle-path-dashboard-happy.png&quot; alt=&quot;A Grafana dashboard showing that the River Ouse is low and there are no flooded cycle paths&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s what my dashboard looks like when there’s a flood (only simulated as there hasn’t been one since I deployed this):&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/writing/york-cycle-path-dashboard-flooding.png&quot;&gt;&lt;img src=&quot;/assets/writing/york-cycle-path-dashboard-flooding.png&quot; alt=&quot;A Grafana dashboard showing that the River Ouse is high and there are several deeply flooded cycle paths&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The really cool thing about this is that the right-hand side panel tells me how deeply paths are flooded. On a bicycle I can go through a few centimetres, but not 20 or 30cm.&lt;/p&gt;

&lt;p&gt;You can get the source code for my Grafana dashboard at &lt;a href=&quot;https://gist.github.com/46bit/a05a6d5bd1f2dc9a4bdfa0c87d328452&quot;&gt;gist.github.com/46bit/a05a6d5bd1f2dc9a4bdfa0c87d328452&lt;/a&gt;. Install it into your Grafana and it should just work, provided you’ve got Prometheus scraping the data.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-alerts&quot;&gt;Setting up alerts&lt;/h2&gt;

&lt;p&gt;I’m using &lt;a href=&quot;https://grafana.com/products/cloud/&quot;&gt;Grafana Cloud&lt;/a&gt; to run my Grafana, so it’s easier to use Grafana Alerts than to configure Alertmanager.&lt;/p&gt;

&lt;p&gt;The Grafana dashboard above includes a bunch of alerts for each of the different paths. I’ve got them forwarding messages to a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#cycling&lt;/code&gt; channel in York-specific Slack group that I’m in:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/writing/york-cycle-path-slack-alert.png&quot; alt=&quot;A Slack message posted by Grafana to warn that a York cycle path is flooded&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rather than trying to teach you how to use Grafana Alerts, install my dashboard and tweak it for your purposes. Expand the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Path flood alerts&lt;/code&gt; row at the bottom of the dashboard and you can edit the alerts in there.&lt;/p&gt;</content><author><name></name></author><summary type="html">I recently moved back to York, a city I absolutely love. One of the best things about living here is cycling. But York has two rivers, one of which brings rain from hills a long way away. Some of the best cycle routes can flood after rainfall when the rivers rise.</summary></entry><entry><title type="html">Getting alerted when cycle paths flood</title><link href="https://46b.it/2021/getting-alerted-when-cycle-paths-flood/" rel="alternate" type="text/html" title="Getting alerted when cycle paths flood" /><published>2021-03-04T00:00:00+00:00</published><updated>2021-03-04T00:00:00+00:00</updated><id>https://46b.it/2021/getting-alerted-when-cycle-paths-flood</id><content type="html" xml:base="https://46b.it/2021/getting-alerted-when-cycle-paths-flood/">&lt;p&gt;I recently moved back to York, a city I absolutely love. One of the best things about living here is cycling. But York has two rivers, one of which brings rain from hills a long way away. Some of the best cycle routes can flood after rainfall when the rivers rise.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;There is already a very useful website for seeing which routes in York are flooded: &lt;a href=&quot;http://nosearmy.com/isitflooded/&quot;&gt;nosearmy.com/isitflooded/&lt;/a&gt;. But it’s annoying having to check my phone before I go cycling–especially when I’m trying to quickly fit six miles in at lunchtime. I’d rather get alerts when cycle paths flood.&lt;/p&gt;

&lt;p&gt;I have a Grafana and Prometheus monitoring stack, so I’m going to use those to notify me. This makes sense if you’re an engineer with DevOps skills; less so for an ordinary person.&lt;/p&gt;

&lt;h2 id=&quot;where-to-find-data-on-river-water-levels&quot;&gt;Where to find data on river water levels&lt;/h2&gt;

&lt;p&gt;To do this I’m going to use freely available River Level data from the Environment Agency. Data for York’s main river level station, Viking Recorder, is online at &lt;a href=&quot;https://check-for-flooding.service.gov.uk/station/8208&quot;&gt;check-for-flooding.service.gov.uk/station/8208&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There’s also an API. It uses different ID numbers, but you can translate IDs. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RLOIid&lt;/code&gt; field on &lt;a href=&quot;https://environment.data.gov.uk/flood-monitoring/id/stations?_limit=50000&quot;&gt;environment.data.gov.uk/flood-monitoring/id/stations?_limit=50000&lt;/a&gt; matches the human-readable pages, and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wiskiID&lt;/code&gt; field is what to use for the API.&lt;/p&gt;

&lt;p&gt;You can then fetch the latest river level reading for your station from &lt;a href=&quot;https://environment.data.gov.uk/flood-monitoring/id/stations/L2406.json&quot;&gt;environment.data.gov.uk/flood-monitoring/id/stations/L2406.json&lt;/a&gt;. There’s a few API endpoints to choose from but this one has the most metadata.&lt;/p&gt;

&lt;h2 id=&quot;how-to-get-the-data-into-prometheus&quot;&gt;How to get the data into Prometheus&lt;/h2&gt;

&lt;p&gt;Next challenge is how to get this into Prometheus. The river level API returns JSON, so we can use the off-the-shelf &lt;a href=&quot;https://github.com/prometheus-community/json_exporter&quot;&gt;github.com/prometheus-community/json_exporter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are many different choices in how to file metrics from this JSON. I’ve ended up assuming there’ll only be one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;latestReading&lt;/code&gt; for each station–that’s true at this station, but you should see if it’s true for yours.&lt;/p&gt;

&lt;p&gt;The final config I’ve made for the json exporter is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
metrics:
- name: river_level
  path: &quot;{ .items }&quot;
  type: object
  values:
    measurement: &quot;{ .measures[*].latestReading.value }&quot;
    max_on_record: &quot;{ .stageScale.maxOnRecord.value }&quot;
    min_on_record: &quot;{ .stageScale.minOnRecord.value }&quot;
  labels:
    rloi_id: &quot;{ .RLOIid }&quot;
    wiski_id: &quot;{ .wiskiID }&quot;
    name: &quot;{ .label }&quot;
    town: &quot;{ .town }&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Start up the JSON Exporter using that config:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./json_exporter --config.file config.yml &amp;amp;
[…]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then scrape the exporter, providing the station data URL:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl &quot;http://localhost:7979/probe?target=https://environment.data.gov.uk/flood-monitoring/id/stations/L2406.json&quot;
# HELP river_level_measurement river_level
# TYPE river_level_measurement untyped
river_level_measurement{rloi_id=&quot;8208&quot;,station_name=&quot;Viking Recorder&quot;,town=&quot;York&quot;,wiski_id=&quot;L2406&quot;} 0.649

# HELP river_level_min_on_record river_level
# TYPE river_level_min_on_record untyped
river_level_min_on_record{rloi_id=&quot;8208&quot;,station_name=&quot;Viking Recorder&quot;,town=&quot;York&quot;,wiski_id=&quot;L2406&quot;} -0.082

# HELP river_level_max_on_record river_level
# TYPE river_level_max_on_record untyped
river_level_max_on_record{rloi_id=&quot;8208&quot;,station_name=&quot;Viking Recorder&quot;,town=&quot;York&quot;,wiski_id=&quot;L2406&quot;} 5.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Unfortunately the JSON Exporter doesn’t support measurement units. It does support help text but I don’t need that for myself (something to do later.) What I have done is configured some useful labels, including the IDs mentioned up the top of this article.&lt;/p&gt;

&lt;p&gt;I’ve made a public Docker image for this if you want to re-use it: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ghcr.io/46bit/flood-exporter&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h2&gt;

&lt;p&gt;The next step is to configure Prometheus to scrape that endpoint, and Grafana to render some pretty graphics and send alerts. I cover that in &lt;strong&gt;&lt;a href=&quot;/2021/getting-alerted-when-cycle-paths-flood-part-two/&quot;&gt;my next post&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">I recently moved back to York, a city I absolutely love. One of the best things about living here is cycling. But York has two rivers, one of which brings rain from hills a long way away. Some of the best cycle routes can flood after rainfall when the rivers rise.</summary></entry><entry><title type="html">How responsible are we for the feelings of others?</title><link href="https://46b.it/2018/how-responsible-are-we-for-others/" rel="alternate" type="text/html" title="How responsible are we for the feelings of others?" /><published>2018-10-18T00:00:00+00:00</published><updated>2018-10-18T00:00:00+00:00</updated><id>https://46b.it/2018/how-responsible-are-we-for-others</id><content type="html" xml:base="https://46b.it/2018/how-responsible-are-we-for-others/">&lt;p&gt;I’d like to publish more of my writing, and so this post is somewhat shorter and stream-of-consciousness than I’ve written before.&lt;/p&gt;

&lt;p&gt;Today I’m discussing what we owe to each other and what we owe to ourselves. In particular, how responsible are we for the feelings of others?&lt;/p&gt;

&lt;p&gt;One school of thought is that we are entirely responsible. In this world we are wholly responsible for how our messages are received. Another model is that we are not responsible at all: we are responsible for nothing more than our intent. These are two extremes.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;I’ve experienced both of these extremes of responsibility and I think that they can be effective adaptations to toxic situations. For instance, when someone is causing regular pain and not responding to complaints, your responsibility to them must drop if you are to avoid self-blame. But I think these extremes are both toxic.&lt;/p&gt;

&lt;!-- In an ideal world I imagine we would be highly-empathic, but not merely with other humans. We&apos;d also be empathic for larger-scale, longer-term things--able to act decisively on future issues where current humans struggle for action. We wouldn&apos;t be frustrated, because our feelings would be innately accepted by others--not necessarily acted upon, but recognised and considered. Yet we don&apos;t live in that world, and we are all flawed. We get worn out, impatient, nervous, optimistic, and many other factors that deplete the concentration it can take to listen and appreciate other people. --&gt;

&lt;p&gt;I’ve concluded that we get to choose. Part of forming and sustaining relationships is bonding and differentiation: deciding what to share and what to differ on. And part of this is deciding in what ways we will care and empathise for the other as much as for ourselves, and in which ways we will care for ourselves most.&lt;/p&gt;

&lt;p&gt;For a long time at University I tried to treat others as I would like to be treated. But I found this gradually wore me down: a few people grew used to me being responsible for them because I was so consistent, but as other loads on me increased I struggled more with the burden. Eventually I would drop that responsibility entirely to focus on myself, with a suddenness that naturally hurt their feelings.&lt;/p&gt;

&lt;p&gt;Black-and-white thinking is often dangerous, and this topic is no exception. To be entirely responsible for other’s feelings is to be overresponsible, and to start to consider them an extension of yourself. To be solely responsible for your own feelings is to be self-absorbed and isolated. With those friends, I didn’t accept that there are shades-of-grey to these things. I didn’t properly set boundaries, and I didn’t properly accept myself.&lt;/p&gt;

&lt;p&gt;What I’ve been trying to do more recently is visualise how responsible I’m willing to be in each interaction, and try to separate that from how accountable I fear I might be. Being mindful of this gives me lots of useful information about what I like and dislike. It also warns me of situations which seem peaceful but where I need to be wary.&lt;/p&gt;

&lt;p&gt;I worried when posting this. I felt I hadn’t established at the beginning how much I personally value empathy. But that makes this post an experiment in itself.&lt;/p&gt;</content><author><name></name></author><summary type="html">I’d like to publish more of my writing, and so this post is somewhat shorter and stream-of-consciousness than I’ve written before. Today I’m discussing what we owe to each other and what we owe to ourselves. In particular, how responsible are we for the feelings of others? One school of thought is that we are entirely responsible. In this world we are wholly responsible for how our messages are received. Another model is that we are not responsible at all: we are responsible for nothing more than our intent. These are two extremes.</summary></entry><entry><title type="html">The counterintuition of how leaders grow</title><link href="https://46b.it/2018/counterintuitive-leadership-growth/" rel="alternate" type="text/html" title="The counterintuition of how leaders grow" /><published>2018-09-21T00:00:00+00:00</published><updated>2018-09-21T00:00:00+00:00</updated><id>https://46b.it/2018/counterintuitive-leadership-growth</id><content type="html" xml:base="https://46b.it/2018/counterintuitive-leadership-growth/">&lt;p&gt;My background is in small organisations: some fast-moving startups, but also some slower-moving organisations like research councils. Since I joined GDS I’ve been getting used to a larger organisation. A big part of that for me has been recognising how important leaders become in organising a large group of people. But a big part of that has been seeing how much help or harm leaders can do.&lt;/p&gt;

&lt;p&gt;GDS has shown me people who I look up to a lot. Leaders who treat people with respect, are keen to grow people around them, and yet can manage effectively and see their team deliver lots. A lot of them are LGBTQ, or not male, and these traits definitely go along with forms of servant-ish leadership I appreciate.&lt;/p&gt;

&lt;p&gt;My naive assumption for a long time was that these people were so brilliant because they’d learned it in equally brilliant, safe conditions. And yet from listening to them I’ve realised that isn’t true at all.&lt;/p&gt;

&lt;p&gt;Wonderful leaders seem to have learned from failure. Even to have ‘born’ in failure. Many of the leaders I admire started leading in difficult situations that made them feel overresponsible, unsupported and unhappy.&lt;/p&gt;

&lt;p&gt;My past has lots of examples where selfishness seemed to lead people to power who were intended to abuse it. I’m a believer that the best leaders are those who aren’t self-centered and wouldn’t seek power for themselves.&lt;/p&gt;

&lt;p&gt;But that doesn’t necessarily look so straighforward in the real world. Many people, such as those in marginalised groups or who don’t try to project masculine-style confidence, don’t get offered chances that they obviously are capable of attempting. So getting that eventually requires some sort of opening.&lt;/p&gt;

&lt;p&gt;I talked about this at length with some very experienced people. Their response was reassuring: that different people are motivated by different things, but that sometimes for anyone to get what they deserve they have to be quite assertive about it. And in particular, that &lt;em&gt;personal ambition is OK.&lt;/em&gt; I suspect that will seem obvious to many readers, and it might feel frightening that I’m suggesting otherwise, but chat with me sometime.&lt;/p&gt;

&lt;p&gt;So one can look for leadership opportunities. I’m vaguely convinced now that being ambitious like that is not unhealthily selfish. Finding the sort of vacuum that one can start healing is a matter of luck, but I was taught a new form of trust. If you’re demonstrating skills then you can trust people to start using those skills. Everyone’s doing their best, everyone needs help. And for awhile that’s probably going to be in a way that gives little responsibility but requires lots of engagement, but that’s how you show what you can do. And it’s how you can fail in a low-consequence situation.&lt;/p&gt;

&lt;p&gt;So, the counterintuition is: &lt;strong&gt;some of the best and most sensitive and effective leaders actually learned that from bad, insensitive, ineffective situations that they felt determined to fix.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(At this point I realise I’m talking about myself.)&lt;/p&gt;</content><author><name></name></author><summary type="html">My background is in small organisations: some fast-moving startups, but also some slower-moving organisations like research councils. Since I joined GDS I’ve been getting used to a larger organisation. A big part of that for me has been recognising how important leaders become in organising a large group of people. But a big part of that has been seeing how much help or harm leaders can do. GDS has shown me people who I look up to a lot. Leaders who treat people with respect, are keen to grow people around them, and yet can manage effectively and see their team deliver lots. A lot of them are LGBTQ, or not male, and these traits definitely go along with forms of servant-ish leadership I appreciate. My naive assumption for a long time was that these people were so brilliant because they’d learned it in equally brilliant, safe conditions. And yet from listening to them I’ve realised that isn’t true at all. Wonderful leaders seem to have learned from failure. Even to have ‘born’ in failure. Many of the leaders I admire started leading in difficult situations that made them feel overresponsible, unsupported and unhappy. My past has lots of examples where selfishness seemed to lead people to power who were intended to abuse it. I’m a believer that the best leaders are those who aren’t self-centered and wouldn’t seek power for themselves. But that doesn’t necessarily look so straighforward in the real world. Many people, such as those in marginalised groups or who don’t try to project masculine-style confidence, don’t get offered chances that they obviously are capable of attempting. So getting that eventually requires some sort of opening. I talked about this at length with some very experienced people. Their response was reassuring: that different people are motivated by different things, but that sometimes for anyone to get what they deserve they have to be quite assertive about it. And in particular, that personal ambition is OK. I suspect that will seem obvious to many readers, and it might feel frightening that I’m suggesting otherwise, but chat with me sometime. So one can look for leadership opportunities. I’m vaguely convinced now that being ambitious like that is not unhealthily selfish. Finding the sort of vacuum that one can start healing is a matter of luck, but I was taught a new form of trust. If you’re demonstrating skills then you can trust people to start using those skills. Everyone’s doing their best, everyone needs help. And for awhile that’s probably going to be in a way that gives little responsibility but requires lots of engagement, but that’s how you show what you can do. And it’s how you can fail in a low-consequence situation. So, the counterintuition is: some of the best and most sensitive and effective leaders actually learned that from bad, insensitive, ineffective situations that they felt determined to fix. (At this point I realise I’m talking about myself.)</summary></entry><entry><title type="html">I’m finding London easier</title><link href="https://46b.it/2018/finding-london-easier/" rel="alternate" type="text/html" title="I’m finding London easier" /><published>2018-08-17T00:00:00+00:00</published><updated>2018-08-17T00:00:00+00:00</updated><id>https://46b.it/2018/finding-london-easier</id><content type="html" xml:base="https://46b.it/2018/finding-london-easier/">&lt;p&gt;&lt;a href=&quot;/2017/finding-london-hard/&quot;&gt;In December I wrote&lt;/a&gt; about how painful I had found it to leave York, move to London by myself, and start putting this new phase of life together. And this seemed strange, because I was evidently doing well and enjoying work and I did not &lt;em&gt;objectively&lt;/em&gt; feel lonely.&lt;/p&gt;

&lt;p&gt;I’ve been learning about an area of psychology called attachment theory, and it turns out that people don’t work that way. Something called the Dependency Paradox describes how people without reliable relationships can struggle to feel comfortable in their independence, whereas once those relationships are settled and reliable the same people will be independent and unconcerned. This lack is why I was feeling so upset for a time, but also why things have felt dramatically lighter in recent months.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;It’s been hard. I’ve been pursuing a lot of difficult angles. At times I’ve been talking about the same areas with multiple people: the past with my therapist, the present with my mentors, and the future with my line manager. This seems like one of the side effects of a relationship-based culture.&lt;/p&gt;

&lt;p&gt;I don’t know where I first came across the concept of a relationship-based culture, but I’ve found it useful in understanding why I like GDS whereas other large organisations seemed quite oppressive from the outside. Rather than following a strict hierarchy or playing fixed roles, we do our best to contribute as best we can in the ways that we best can. Much of that is by forming strong relationships with those around us, and that directly links to the relationships going on in our life outside work.&lt;/p&gt;

&lt;p&gt;This can go too far. I cringe when people describe hierarchied work-focused groups as being a community, because they intentionally have &lt;em&gt;formal&lt;/em&gt; power imbalances and that’s not what I expect from a community. In practice our tech communities feel more like guilds. It’s a tricky issue: to call them communities is to minimise the power imbalances; to call them guilds risks maximising it.&lt;/p&gt;

&lt;p&gt;Power is an area I’ve been learning to understand more. A few months I was remarked to that my opinions often ‘saved lives’ and I could do with being more persuasive. This took me out of nowhere, because I felt that I did contribute my opinions fully. But as best I understand it, this is because human beings often respond more to displays of confidence than to the reasoned quality of ideas. I despair a little at humanity over this but I also recognise that people get tired, are doing their best, and I can’t change humanity. So I had to get better at that–and &lt;em&gt;then&lt;/em&gt; I could use that persuasion to ensure that quieter but better ideas got heard (not just my own–those of others!) This inner frustration is ironic, considering how much time I spent trying to explain to engineers that people are not purely rational and act in paradoxical ways if you do not appreciate the role of their personalities. But, well, I am autistic.&lt;/p&gt;

&lt;p&gt;Some of this makes me uncomfortable. Knowing how to communicate assertively can be repurposed to communicate aggressively or manipulatively, and our own moral compass and the reactions of others is all we have to go on. Human interaction is often in shades of grey. Observe how common extremely assertive (and aggressive) communication is amongst London commuters. This is a bit dreadful for someone from quiet Northern cities, but it is efficient because it stops things getting personal, clearly sets expectations, and keeps people focused on getting where they are going. A mentor describes the difference between assertion and aggression as, “assertiveness is getting your strongly held opinions across without suppressing those of others.”&lt;/p&gt;

&lt;p&gt;These areas are interesting. They’ve kept me busy. I have some clear goals now for how to develop my people, organisational and leadership skills further. Best of all I have three people that I feel like I can rely on seeing every week or two, and thirty I can rely on seeing about. Those attachments are important, because &lt;a href=&quot;https://www.psychologytoday.com/gb/blog/are-we-born-racist/201205/the-dependency-paradox-why-people-are-not-feet&quot;&gt;people are not like feet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It had been quite distressing to see my insecurities rising since I moved down. But it’s made me stronger. I know my triggers a lot better now, and the traumatic experiences behind them. I’ve also learned how much of a liability unhappy relationships can be, and have an inner sense-of-safety to help me exit them.&lt;/p&gt;

&lt;p&gt;I know from experience and understanding that &lt;a href=&quot;https://www.psychologytoday.com/gb/blog/fulfillment-any-age/201501/why-insecure-people-make-such-bad-bosses&quot;&gt;insecure people can make terrible leaders&lt;/a&gt;. Power imbalances can bring out their worst. But those experiences have been with people who were unaware, in denial, or not seeing someone about it. I &lt;em&gt;know&lt;/em&gt; my self-esteem needs work, and I’m working on it.&lt;/p&gt;</content><author><name></name></author><summary type="html">In December I wrote about how painful I had found it to leave York, move to London by myself, and start putting this new phase of life together. And this seemed strange, because I was evidently doing well and enjoying work and I did not objectively feel lonely. I’ve been learning about an area of psychology called attachment theory, and it turns out that people don’t work that way. Something called the Dependency Paradox describes how people without reliable relationships can struggle to feel comfortable in their independence, whereas once those relationships are settled and reliable the same people will be independent and unconcerned. This lack is why I was feeling so upset for a time, but also why things have felt dramatically lighter in recent months.</summary></entry><entry><title type="html">Weeknote 3</title><link href="https://46b.it/2018/weeknote-3/" rel="alternate" type="text/html" title="Weeknote 3" /><published>2018-06-15T00:00:00+00:00</published><updated>2018-06-15T00:00:00+00:00</updated><id>https://46b.it/2018/weeknote-3</id><content type="html" xml:base="https://46b.it/2018/weeknote-3/">&lt;p&gt;I missed a weeknote. Interesting things happened but I went through a period of being down and having crippling hayfever.&lt;/p&gt;

&lt;h2 id=&quot;i-learned-lots-about-leading-in-an-agile-environment&quot;&gt;I learned lots about leading in an agile environment&lt;/h2&gt;

&lt;p&gt;A difficulty with working at GDS is how exposing collaborative ways of working can be. There are lots of potential triggers, like teams expecting pair programming and not building in ay recharge time. There are lots of things one has to work with, such as being overwhelmed by bright office lights.&lt;/p&gt;

&lt;p&gt;I’ve learned to work around these things. Finding recharge time can be a question of seeing yourself as being &lt;em&gt;in&lt;/em&gt; the team rather than &lt;em&gt;of&lt;/em&gt; it. Bright office lights can be mitigated by polarising sunglasses, and hopefully by something more stylish in time. And I’ve learned a lot along the way.&lt;/p&gt;

&lt;p&gt;We seem to learn more from unpleasant experiences than from enjoyable ones. It’s hard to know &lt;em&gt;why&lt;/em&gt; something successful works without asking a lot of questions, and some questions risk surfacing lingering issues and creating drama. I suppose that the people we &lt;a href=&quot;https://en.wikipedia.org/wiki/Tuckman%27s_stages_of_group_development#Storming&quot;&gt;storm with&lt;/a&gt; can become deeply respected and appreciated friends as things normalise.&lt;/p&gt;

&lt;p&gt;I’ve been talking to quite a few Delivery Managers and Product Managers, and I shadowed &lt;a href=&quot;https://twitter.com/probablyreading&quot;&gt;one of my favouritest Delivery Managers&lt;/a&gt;. I’m fascinating by the agile team structures that we use, and their deliberate structures. I had always felt that stereotyping people into roles was oppressive, and would be suffocating to roleplay. But these structures work &lt;em&gt;because&lt;/em&gt; people divide responsibilities—not because people are necessarily lacking in relevant abilities. With divided responsibilities comes more focus, clearer lines to collaborate along, and thus more effective teams. When you understand your role you &lt;em&gt;can&lt;/em&gt; subvert it in ways that work for you (for instance, some Delivery Managers take a keener interest on the Product side of things.)&lt;/p&gt;

&lt;p&gt;I’ve been talking to quite a few Delivery Managers and Product Managers, and I shadowed &lt;a href=&quot;https://twitter.com/probablyreading&quot;&gt;one of my favouritest Delivery Managers&lt;/a&gt;. I’m fascinating by the deliberate structures in our agile teams. These structures seem to work &lt;em&gt;because&lt;/em&gt; people divide responsibilities, even though people might not be lacking in skills.&lt;/p&gt;

&lt;p&gt;A good example is that Product Managers sometimes need to be “a product arse”—very outspoken in advocating for the product. This could ruin morale or burn the team out, except that other roles are there to speak out for what’s humanly and technically possible. When you can count on the other roles in a team to complement your role, you achieve more together.&lt;/p&gt;

&lt;p&gt;I had always felt that stereotyping people into roles was oppressive, and would be suffocating to roleplay. But these structures work &lt;em&gt;because&lt;/em&gt; people divide responsibilities—not because people are necessarily lacking in relevant abilities. When you understand your role you &lt;em&gt;can&lt;/em&gt; subvert it in ways that work for you (for instance, some Delivery Managers take a keener interest on the Product side of things.)&lt;/p&gt;

&lt;p&gt;GDS ask interviewing Developers about experience of leadership. I kept quiet because it isn’t necessary for mid-level, and I doubted my experiences in smaller orgs with informal leadership was relevant. At this stage: a lot of that was the stereotyped self-doubt that marginalised people get when applying for roles. The missing ingredient in applying my leadership experience to GDS wasn’t “how does one lead?” but “why do we have roles?”&lt;/p&gt;

&lt;p&gt;This is all opinion. Much of it is influenced by others; the exact understanding is mine. I think it’s a way forward. As I learn more of my triggers, and keep finding new opportunities to exercise myself in different team situations, I’ll get closer and closer to being a credible tech lead. This might take a long time, but that’s particular to &lt;em&gt;this&lt;/em&gt; way of working, and if I wanted I could find a different organisation that I could lead in right now. But GDS’s ways of working care about people, deliver great products, and are worth my effort to learn.&lt;/p&gt;

&lt;h2 id=&quot;the-other-things-ive-been-doing&quot;&gt;The other things I’ve been doing&lt;/h2&gt;

&lt;p&gt;I’ve said all that without mentioning what I’ve actually being doing most of the time! I think I’ll talk about that next time. I’ve done:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;lots of learning and some changing to GOV.UK Verify infrastructure;&lt;/li&gt;
  &lt;li&gt;supporting multiple teams’ needs simultaneously;&lt;/li&gt;
  &lt;li&gt;becoming more confident approaching unknown people that might not be able to help me;&lt;/li&gt;
  &lt;li&gt;trying/maybe-failing/reflecting to teach &lt;a href=&quot;https://www.terraform.io&quot;&gt;Terraform&lt;/a&gt; skills to (junior) developers;&lt;/li&gt;
  &lt;li&gt;making progress towards hosting Queer Code London at GDS;&lt;/li&gt;
  &lt;li&gt;debugging S3 bucket policies;&lt;/li&gt;
  &lt;li&gt;working on my &lt;a href=&quot;https://github.com/46bit/tilewater&quot;&gt;Tilewater&lt;/a&gt; game in Rust;&lt;/li&gt;
  &lt;li&gt;thinking about how/if a team could shorten standups to be a feasible standing-up duration;&lt;/li&gt;
  &lt;li&gt;befriending other Reliability Engineers;&lt;/li&gt;
  &lt;li&gt;investigating sporadically elevated &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;502&lt;/code&gt; error rates,&lt;/li&gt;
  &lt;li&gt;even practicing how to be gently intimidating so I have a defence mechanism if I ever need one!&lt;/li&gt;
  &lt;li&gt;… and at least a dozen other things!&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">I missed a weeknote. Interesting things happened but I went through a period of being down and having crippling hayfever. I learned lots about leading in an agile environment A difficulty with working at GDS is how exposing collaborative ways of working can be. There are lots of potential triggers, like teams expecting pair programming and not building in ay recharge time. There are lots of things one has to work with, such as being overwhelmed by bright office lights. I’ve learned to work around these things. Finding recharge time can be a question of seeing yourself as being in the team rather than of it. Bright office lights can be mitigated by polarising sunglasses, and hopefully by something more stylish in time. And I’ve learned a lot along the way. We seem to learn more from unpleasant experiences than from enjoyable ones. It’s hard to know why something successful works without asking a lot of questions, and some questions risk surfacing lingering issues and creating drama. I suppose that the people we storm with can become deeply respected and appreciated friends as things normalise. I’ve been talking to quite a few Delivery Managers and Product Managers, and I shadowed one of my favouritest Delivery Managers. I’m fascinating by the agile team structures that we use, and their deliberate structures. I had always felt that stereotyping people into roles was oppressive, and would be suffocating to roleplay. But these structures work because people divide responsibilities—not because people are necessarily lacking in relevant abilities. With divided responsibilities comes more focus, clearer lines to collaborate along, and thus more effective teams. When you understand your role you can subvert it in ways that work for you (for instance, some Delivery Managers take a keener interest on the Product side of things.) I’ve been talking to quite a few Delivery Managers and Product Managers, and I shadowed one of my favouritest Delivery Managers. I’m fascinating by the deliberate structures in our agile teams. These structures seem to work because people divide responsibilities, even though people might not be lacking in skills. A good example is that Product Managers sometimes need to be “a product arse”—very outspoken in advocating for the product. This could ruin morale or burn the team out, except that other roles are there to speak out for what’s humanly and technically possible. When you can count on the other roles in a team to complement your role, you achieve more together. I had always felt that stereotyping people into roles was oppressive, and would be suffocating to roleplay. But these structures work because people divide responsibilities—not because people are necessarily lacking in relevant abilities. When you understand your role you can subvert it in ways that work for you (for instance, some Delivery Managers take a keener interest on the Product side of things.) GDS ask interviewing Developers about experience of leadership. I kept quiet because it isn’t necessary for mid-level, and I doubted my experiences in smaller orgs with informal leadership was relevant. At this stage: a lot of that was the stereotyped self-doubt that marginalised people get when applying for roles. The missing ingredient in applying my leadership experience to GDS wasn’t “how does one lead?” but “why do we have roles?” This is all opinion. Much of it is influenced by others; the exact understanding is mine. I think it’s a way forward. As I learn more of my triggers, and keep finding new opportunities to exercise myself in different team situations, I’ll get closer and closer to being a credible tech lead. This might take a long time, but that’s particular to this way of working, and if I wanted I could find a different organisation that I could lead in right now. But GDS’s ways of working care about people, deliver great products, and are worth my effort to learn. The other things I’ve been doing I’ve said all that without mentioning what I’ve actually being doing most of the time! I think I’ll talk about that next time. I’ve done: lots of learning and some changing to GOV.UK Verify infrastructure; supporting multiple teams’ needs simultaneously; becoming more confident approaching unknown people that might not be able to help me; trying/maybe-failing/reflecting to teach Terraform skills to (junior) developers; making progress towards hosting Queer Code London at GDS; debugging S3 bucket policies; working on my Tilewater game in Rust; thinking about how/if a team could shorten standups to be a feasible standing-up duration; befriending other Reliability Engineers; investigating sporadically elevated 502 error rates, even practicing how to be gently intimidating so I have a defence mechanism if I ever need one! … and at least a dozen other things!</summary></entry></feed>